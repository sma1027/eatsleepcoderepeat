<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>sofiama - eatsleepcoderepeat</title><description>Thoughts, stories and ideas.</description><link>http://localhost:2368/</link><generator>Ghost 0.5</generator><lastBuildDate>Mon, 02 Mar 2015 20:24:18 GMT</lastBuildDate><atom:link href="http://localhost:2368/author/sofiama/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>using devise to create users with admin credentials</title><description>&lt;p&gt;Using the devise gem to create users with admin credentials in Rails.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The setup&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;  
    &lt;li&gt;Add devise:
        &lt;ul&gt;
            &lt;li&gt;Open your Gemfile and add &lt;strong&gt;gem 'devise'&lt;/strong&gt;&lt;/li&gt;
         &lt;/ul&gt;
    &lt;/li&gt;&lt;li&gt;Open your terminal and run:&lt;/li&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;code&gt;bundle install&lt;/code&gt;&lt;/li&gt;
        &lt;li&gt;&lt;code&gt;rails g devise:install&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;li&gt;Create the user table&lt;/li&gt;
        &lt;ul&gt;&lt;li&gt;&lt;code&gt;rails g devise user&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;li&gt;Add an admin column to the users table&lt;/li&gt;
    &lt;ul&gt;&lt;li&gt;&lt;code&gt;rails generate migration add_admin_to_users admin:boolean&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
    &lt;li&gt;Execute migration
        &lt;ul&gt;&lt;li&gt;&lt;code&gt;rake db:migrate&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
    &lt;/li&gt;
&lt;/ol&gt;  

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Helper methods&lt;/strong&gt; from devise&lt;/p&gt;

&lt;ul&gt;  
    &lt;li&gt;user_signed_in?&lt;/li&gt;
    &lt;li&gt;current_user&lt;/li&gt;
    &lt;li&gt;current_user.admin?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check your schema for the current_user's attributes.&lt;/p&gt;</description><link>http://localhost:2368/using-devise-to-create-users-with-admin-credentials/</link><guid isPermaLink="false">441b2fab-454a-4524-ae55-ff9577f6a2ad</guid><dc:creator>sofiama</dc:creator><pubDate>Mon, 02 Mar 2015 20:22:10 GMT</pubDate></item><item><title>ghost blog with github pages for free!!!</title><description>&lt;p&gt;&lt;strong&gt;The setup:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download &lt;a href="http://blog.nodejs.org/2014/10/23/node-v0-10-33-stable/"&gt;node version 0.10.33(stable)&lt;/a&gt; &lt;br&gt;
&lt;ul&gt;&lt;li&gt;because Ghost requires Node.js 0.10.x (latest stable)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Download &lt;a href="https://ghost.org/download/"&gt;ghost&lt;/a&gt; &lt;br&gt;
&lt;ul&gt;&lt;li&gt;unzip the folder
&lt;code&gt;
$cd ghost
$npm install --production
$npm start
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to &lt;a href="127.0.0.1:2368/ghost/"&gt;127.0.0.1:2368/ghost/&lt;/a&gt; and setup ghost&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Install buster &lt;br&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;$sudo easy_install pip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$pip install buster&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Setup Github Pages &lt;br&gt;
&lt;ul&gt;&lt;li&gt;Create a new repo on GitHub&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd ghost&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$buster setup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;enter repo name &lt;code&gt;git@github.com:username/repo_name.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;add a custom domain name &lt;code&gt;buster add-domain custom-domain-name.com&lt;/code&gt; so that it can be viewed at &lt;a href="http://username.github.io/custom-domain-name"&gt;http://username.github.io/custom-domain-name&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Deploy! &lt;br&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;buster generate --domain 127.0.0.1:2368&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buster preview&lt;/code&gt; which can be viewed at localhost:9000&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buster deploy&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Future posts - the workflow - how to?&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;  
&lt;li&gt;&lt;code&gt;$cd ghost&lt;/code&gt;&lt;/li&gt;  
&lt;li&gt;&lt;code&gt;$npm start&lt;/code&gt;&lt;/li&gt;  
&lt;li&gt;go to &lt;a href="http://127.0.0.1:2368/ghost/"&gt;127.0.0.1:2368/ghost/&lt;/a&gt;&lt;/li&gt;  
&lt;li&gt;create your post&lt;/li&gt;  
&lt;li&gt;&lt;code&gt;buster generate --domain 127.0.0.1:2368&lt;/code&gt;&lt;/li&gt;  
&lt;li&gt;&lt;code&gt;buster preview&lt;/code&gt;&lt;/li&gt;  
&lt;li&gt;&lt;code&gt;buster deploy&lt;/code&gt;&lt;/li&gt;  
&lt;li&gt;visit &lt;a href="http://username.github.io/custom-domain-name"&gt;http://username.github.io/custom-domain-name&lt;/a&gt; =)&lt;/li&gt;  
&lt;/ol&gt;</description><link>http://localhost:2368/ghost-blog-with-github-pages-for-free/</link><guid isPermaLink="false">19257998-34f1-4fef-9b27-18b54938b644</guid><category>ghost</category><category>free</category><category>blog</category><category>github-pages</category><category>buster</category><dc:creator>sofiama</dc:creator><pubDate>Tue, 24 Feb 2015 20:44:56 GMT</pubDate></item><item><title>woot! easier mapping!</title><description>&lt;p&gt;Say for example you have this &lt;br&gt;
- A table of users, with a name and a boolean value of true or false whether they are a student or not.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class CreateUsers ActiveRecord::Migration
    def change :users do |t|
        t.string    :name
        t.boolean   :student
    end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;Say you want to get count the number of users that are students. &lt;br&gt;
Ex: If there are 5 users, 4 students and 1 not a student:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;users = User.all #
   users.map{|user| user.student} #[true, true, false, true, true]
users.count(true) # 4
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;You can do it this way instead! Use the &lt;strong&gt;&amp;amp;:&lt;/strong&gt; for mapping and use &lt;strong&gt;count(value)&lt;/strong&gt;, where in this case we want value to be true, because we are counting the number of true values.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;users.map(&amp;amp;:student).count(true) #4
&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/woot-easier-mapping/</link><guid isPermaLink="false">265f0649-850c-425f-9f44-d39dfb2fc3c8</guid><dc:creator>sofiama</dc:creator><pubDate>Mon, 24 Nov 2014 07:36:00 GMT</pubDate></item><item><title>making it simple. yey!</title><description>&lt;p&gt;&lt;strong&gt;Q: Problem - Even Fibonacci&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: &lt;br&gt;
        1,2,3,5,8,13,21,34,55,89...&lt;/p&gt;

&lt;p&gt;By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;code 1&lt;/em&gt;&lt;/strong&gt;
- using i's and j's&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def even_fibonacci_sum(limit)
    i = 1
    j = 2
    arr = [i , j]

    while j &amp;lt; limit
      sum = i + j

      if sum &amp;lt; limit
        arr &amp;lt;&amp;lt; sum
      end

      i = j
      j = sum
    end

    sum = 0

    arr.each do |i|
      if i % 2 == 0
        sum += i
      end
    end

    sum
 end
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;code 2&lt;/em&gt;&lt;/strong&gt; - not using i's and j's in a while loop&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def even_fibonacci_sum(limit)
    arr = [1 , 2]

    while arr.last &amp;lt; limit
      sum = arr[-2] + arr.last
      break if sum &amp;gt; limit
      arr &amp;lt;&amp;lt; sum 
    end

    sum = 0

    arr.each do |i|
      sum += i if i % 2 == 0
    end

    sum
 end
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;* code 3 *&lt;/strong&gt; not using i's and j's in a loop do&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def even_fibonacci_sum(limit)
    arr = [1 , 2]

    loop do
      sum = arr[-2] + arr.last
      break if sum &amp;gt; limit
      arr &amp;lt;&amp;lt; sum
    end

    sum = 0

    arr.each do |i|
      sum += i if i % 2 == 0
    end

    sum
 end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TL; DR: Refactoring is pretty! Code 1 can be refactored as code 2 or code 3.&lt;/p&gt;</description><link>http://localhost:2368/making-it-simple-yey/</link><guid isPermaLink="false">f9403960-2e66-4ab6-9f91-a4d9db23f865</guid><dc:creator>sofiama</dc:creator><pubDate>Mon, 10 Nov 2014 07:31:00 GMT</pubDate></item><item><title>Active Record Delete vs Destroy</title><description>&lt;p&gt;Models&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Customer &amp;lt; ActiveRecord::Base
  has_many :orders
end

class Order &amp;lt; ActiveRecord::Base
  belongs_to :customer
end
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;Migrations&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Order &amp;lt; ActiveRecord::Migration
  def change
    create_table customers do |t|
      t.integer :customer_id
       end
   end
end

class Customer &amp;lt; ActiveRecord::Migration
  def change
    create_table customers do |t|
       end
   end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;A customer create with an order&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@customer = Customer.create    
@customer.orders.create
    #customer.id = 1, order.id = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;When delete is run. The association still exists.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;customer.delete # customer.id = 1, order.id = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When destroy is run, the association and rows are deleted.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;customer.destroy #[]
&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/active-record-delete-vs-destroy/</link><guid isPermaLink="false">6fb23e5f-a56d-48a1-a065-520314dc481b</guid><dc:creator>sofiama</dc:creator><pubDate>Mon, 27 Oct 2014 11:36:00 GMT</pubDate></item><item><title>make it work, make it right, make it fast</title><description>&lt;p&gt;Return matching elements from two arrays&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Given  
a = [1, 2, 3]
b = [9, 4, 1]
# Return [1]
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;1 - make it work, 2- make it right&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c = []  
a.each do |item1|
  b.each do |item2|
    if item1 == item2
      c &amp;lt;&amp;lt; item1
    end
  end
end
c # [1]
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;3 - make it fast&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = [1, 2, 3]
b = [9, 4, 1]
a &amp;amp; b # [1]
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;The single &amp;amp; operator replaces 8 lines of code !!! Ruby is awesome !!!&lt;/p&gt;</description><link>http://localhost:2368/make-it-work-make-it-right-make-it-fast/</link><guid isPermaLink="false">536dd1d3-1b97-445a-b3ef-b50dce4ba0b9</guid><dc:creator>sofiama</dc:creator><pubDate>Fri, 10 Oct 2014 04:24:00 GMT</pubDate></item><item><title>Welcome to Ghost</title><description>&lt;p&gt;You're live! Nice. We've put together a little post to introduce you to the Ghost editor and get you started. You can manage your content by signing in to the admin area at &lt;code&gt;&amp;lt;your blog URL&amp;gt;/ghost/&lt;/code&gt;. When you arrive, you can select this post from a list on the left and see a preview of it on the right. Click the little pencil icon at the top of the preview to edit this post and read the next section!&lt;/p&gt;

&lt;h2 id="gettingstarted"&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;Ghost uses something called Markdown for writing. Essentially, it's a shorthand way to manage your post formatting as you write!&lt;/p&gt;

&lt;p&gt;Writing in Markdown is really easy. In the left hand panel of Ghost, you simply write as you normally would. Where appropriate, you can use &lt;em&gt;shortcuts&lt;/em&gt; to &lt;strong&gt;style&lt;/strong&gt; your content. For example, a list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Item number one&lt;/li&gt;
&lt;li&gt;Item number two
&lt;ul&gt;&lt;li&gt;A nested item&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;A final item&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;or with numbers!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Remember to buy some milk  &lt;/li&gt;
&lt;li&gt;Drink the milk  &lt;/li&gt;
&lt;li&gt;Tweet that I remembered to buy the milk, and drank it&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="links"&gt;Links&lt;/h3&gt;

&lt;p&gt;Want to link to a source? No problem. If you paste in a URL, like &lt;a href="http://ghost.org/"&gt;http://ghost.org&lt;/a&gt; - it'll automatically be linked up. But if you want to customise your anchor text, you can do that too! Here's a link to &lt;a href="http://ghost.org/"&gt;the Ghost website&lt;/a&gt;. Neat.&lt;/p&gt;

&lt;h3 id="whataboutimages"&gt;What about Images?&lt;/h3&gt;

&lt;p&gt;Images work too! Already know the URL of the image you want to include in your article? Simply paste it in like this to make it show up:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://ghost.org/images/ghost.png" alt="The Ghost Logo"&gt;&lt;/p&gt;

&lt;p&gt;Not sure which image you want to use yet? That's ok too. Leave yourself a descriptive placeholder and keep writing. Come back later and drag and drop the image in to upload:&lt;/p&gt;

&lt;h3 id="quoting"&gt;Quoting&lt;/h3&gt;

&lt;p&gt;Sometimes a link isn't enough, you want to quote someone on what they've said. It was probably very wisdomous. Is wisdomous a word? Find out in a future release when we introduce spellcheck! For now - it's definitely a word.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Wisdomous - it's definitely a word.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id="workingwithcode"&gt;Working with Code&lt;/h3&gt;

&lt;p&gt;Got a streak of geek? We've got you covered there, too. You can write inline &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; blocks really easily with back ticks. Want to show off something more comprehensive? 4 spaces of indentation gets you there.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.awesome-thing {
    display: block;
    width: 100%;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="readyforabreak"&gt;Ready for a Break?&lt;/h3&gt;

&lt;p&gt;Throw 3 or more dashes down on any new line and you've got yourself a fancy new divider. Aw yeah.&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id="advancedusage"&gt;Advanced Usage&lt;/h3&gt;

&lt;p&gt;There's one fantastic secret about Markdown. If you want, you can write plain old HTML and it'll still work! Very flexible.&lt;/p&gt;

&lt;p&gt;&lt;input type="text" placeholder="I'm an input field!"&gt;&lt;/p&gt;

&lt;p&gt;That should be enough to get you started. Have fun - and let us know what you think :)&lt;/p&gt;</description><link>http://localhost:2368/welcome-to-ghost/</link><guid isPermaLink="false">405aad59-b180-473b-828b-7866eaa0272c</guid><category>Getting Started</category><dc:creator>sofiama</dc:creator><pubDate>Fri, 10 Oct 2014 04:06:00 GMT</pubDate></item></channel></rss>